A model based navigation system learns from previous fed data and then try to predict the best path to be taken for the future data. Uncertainity in this type of model could be because of many reasons but one of the major source of error is bad data. Even if we train the model on good and clean data, the real time data can never be going to be clean enough. The sensors which are fitted on this model can be a potent source of this errors. We use GNSS, Camera, LIDAR,etc which all get affected due to changing conditions. 
	A possible solution to this can be include some high quality or more advanced sensors which could generate much less erros but the solution seems infeasible. So rather we can use this data and output multiple paths and then based on some uncertainity criteria we can choose the best possible path to be taken and output that path. The choice of our uncertainity criteria depends upon various conditions. But this seem more feasible solution to me because we can include almost every possible condition and train the model previously on them and thus it would be then able to perform better even in these extreme conditions.
	Another good thing would be if we can constantly generate data from model and feed it. And model constantly learns from it.
